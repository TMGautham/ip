Async await:


1.Async function always returns a promise.

async function hello(){
    try{
        return("Hello")
    }
    catch(error){
        return("Boo! You have a " + error)
    }
}

hello();
Output: Hello : PromiseÂ {<fulfilled>: 'Hello'}


2. Using async await to fulfill a promise
async function caller(){
    const str = await hello();
    console.log(str);
}

caller();

Output: Hello

3. Rejection handling in async await:

async function hello(){
    try{
        if(false)
            return("Hello")
        else throw new Error("ERROR")
    }
    catch(error){
        return("Boo! You have a " + error)
    }
}

4. Alternate way:

async function hello(){
    if(false){
            return("Hello")
    } else {throw new Error("ERROR")
    }
}

async function caller(){
    try{
    const str = await hello();
    console.log(str);
    }catch(err){
        console.log(`You got : ${err.message}`)
    }
}

caller();

5. 